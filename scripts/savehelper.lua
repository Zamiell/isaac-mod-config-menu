------------------------------------------------------------------------------
--                   IMPORTANT:  DO NOT EDIT THIS FILE!!!                   --
------------------------------------------------------------------------------
-- This file relies on other versions of itself being the same.             --
-- If you need something in this file changed, please let the creator know! --
------------------------------------------------------------------------------

-- CODE STARTS BELOW --


-------------
-- version --
-------------
local fileVersion = 1

--prevent older/same version versions of this script from loading
if SaveHelper and SaveHelper.Version >= fileVersion then

	return SaveHelper

end

if not SaveHelper then

	SaveHelper = {}
	SaveHelper.Version = fileVersion
	
elseif SaveHelper.Version < fileVersion then

	local oldVersion = SaveHelper.Version
	
	-- handle old versions
	if SaveHelper.Mod.RemoveCustomCallback then
	
		if SaveHelper.OnModsLoaded then
			SaveHelper.Mod:RemoveCustomCallback(CustomCallbacks.CCH_MODS_LOADED, SaveHelper.OnModsLoaded)
		end
	
		if SaveHelper.OnGameStarted then
			SaveHelper.Mod:RemoveCustomCallback(CustomCallbacks.CCH_GAME_STARTED, SaveHelper.OnGameStarted)
		end
		
	end
	
	if SaveHelper.PostNewLevel then
		SaveHelper.Mod:RemoveCallback(ModCallbacks.MC_POST_NEW_LEVEL, SaveHelper.PostNewLevel)
	end
	
	if SaveHelper.PostNewRoom then
		SaveHelper.Mod:RemoveCallback(ModCallbacks.MC_POST_NEW_ROOM, SaveHelper.PostNewRoom)
	end
	
	if SaveHelper.PreGameExit then
		SaveHelper.Mod:RemoveCallback(ModCallbacks.MC_PRE_GAME_EXIT, SaveHelper.PreGameExit)
	end

	SaveHelper.Version = fileVersion

end


--require some lua libraries
local json = require("json")


-----------
-- setup --
-----------
SaveHelper.Mod = SaveHelper.Mod or RegisterMod("Save Helper", 1)


----------
--TABLES--
----------
function SaveHelper.CopyTable(tableToCopy)

	local table2 = {}
	
	for i, value in pairs(tableToCopy) do
	
		if type(value) == "table" then
			table2[i] = SaveHelper.CopyTable(value)
		else
			table2[i] = value
		end
		
	end
	
	return table2
	
end

function SaveHelper.FillTable(tableToFill, tableToFillFrom)

	for i, value in pairs(tableToFillFrom) do
	
		if tableToFill[i] ~= nil then
		
			if type(value) == "table" then
				
				if type(tableToFill[i]) ~= "table" then
					tableToFill[i] = {}
				end
				
				tableToFill[i] = SaveHelper.FillTable(tableToFill[i], value)
				
			else
				tableToFill[i] = value
			end
			
		else
		
			if type(value) == "table" then
				
				if type(tableToFill[i]) ~= "table" then
					tableToFill[i] = {}
				end
				
				tableToFill[i] = SaveHelper.FillTable({}, value)
				
			else
				tableToFill[i] = value
			end
			
		end
		
	end
	
	return tableToFill
	
end

SaveHelper.Mod:AddCallback(ModCallbacks.MC_PRE_GAME_EXIT, SaveHelper.PreGameExit)

return SaveHelper
